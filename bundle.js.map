{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;ACAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCnBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;;;;;;;;;;;;;;AClBsB;AACiB;AACF;AACM;AACI;AACR;AACD;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4CAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F,mBAAmB;AAChH;AACA;AACA,oGAAoG,sBAAsB;AAC1H,wFAAwF,gBAAgB;AACxG,8FAA8F,mBAAmB;AACjH,sFAAsF,uEAAuE;AAC7J;AACA;AACA;AACA;AACA;AACA,4BAA4B,iCAAiC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,qCAAqC,cAAc;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8CAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,iBAAiB;AAChE;AACA,0CAA0C,iBAAiB;AAC3D;AACA,wCAAwC,kBAAkB;AAC1D;AACA;AACA,0CAA0C,iBAAiB;AAC3D;AACA,6CAA6C,kBAAkB;AAC/D;AACA,yCAAyC,kBAAkB;AAC3D;AACA,uBAAuB,6CAAI;AAC3B,yBAAyB,kDAAS;AAClC,sBAAsB,8CAAK;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,kDAAS;AACtE;AACA;AACA;AACA,6DAA6D,gDAAO;AACpE;AACA;AACA;AACA,YAAY;AACZ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kBAAkB,4CAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB,GAAG,+BAA+B,mBAAmB,wBAAwB,GAAG,0BAA0B,eAAe,oBAAoB,KAAK,2BAA2B,gBAAgB,oBAAoB,GAAG,2BAA2B,kBAAkB,sBAAsB;AAC5T;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uBAAuB,sCAAI;AAC3B;AACA;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oBAAoB,wBAAwB;AAC5C,wBAAwB,iCAAiC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,oBAAoB,wBAAwB;AAC5C,wBAAwB,iCAAiC;AACzD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,YAAY;AACZ,CAAC;AACD;AACA;AACA;AACA,2BAA2B,wBAAwB;AACnD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA","sources":["webpack://todo/./src/styles.css?1553","webpack://todo/./src/obj.js","webpack://todo/webpack/bootstrap","webpack://todo/webpack/runtime/define property getters","webpack://todo/webpack/runtime/global","webpack://todo/webpack/runtime/hasOwnProperty shorthand","webpack://todo/webpack/runtime/make namespace object","webpack://todo/webpack/runtime/publicPath","webpack://todo/./src/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","export class Department {\r\n    constructor(title, todos=[]) {\r\n        this.title = title;\r\n        this.toDos = todos;\r\n    }\r\n    addToDo(toDo) {\r\n        this.toDos.push(toDo);\r\n    }\r\n}\r\n\r\nexport class ToDo {\r\n    constructor(title, priority, description, notes, deadline) {\r\n        this.title = title;\r\n        this.priority = priority;\r\n        this.description = description;\r\n        this.notes = notes;\r\n        this.deadline = deadline;\r\n        this.done = false;\r\n    }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","import './styles.css';\r\nimport {Department, ToDo} from './obj';\r\nimport Plus from './assets/plus.svg';\r\nimport UpArrow from './assets/upArrow.svg';\r\nimport DownArrow from './assets/downArrow.svg';\r\nimport Minus from './assets/minus.svg';\r\nimport Done from './assets/done3.svg';\r\n\r\nconst tasks = document.querySelector('.tasks');\r\nconst modals = document.querySelectorAll('.modal-container');\r\nconst newDepModal = document.querySelector('.mod-contNewDep');\r\nconst newTaskModal = document.querySelector('.mod-contNewTask');\r\nconst colorMapModal = document.querySelector('.mod-contColorMap');\r\nconst taskModal = document.querySelector('.mod-contTask');\r\nconst addDep = document.querySelector('.addDep');\r\nconst colorMap = document.querySelector('.colorMap')\r\nconst warning = document.querySelector('.warning');\r\nconst categories = document.querySelectorAll('.category');\r\n\r\nlet currentCategory = 'all';\r\nlet taskClicked;\r\n\r\nif (!window.localStorage.getItem('DEPARTMENTS')) {\r\n    window.localStorage.setItem('DEPARTMENTS', JSON.stringify([\r\n        new Department('General')\r\n    ]))\r\n}\r\n\r\nlet plusClicked = (JSON.parse(window.localStorage.getItem('DEPARTMENTS')))[0];\r\n\r\nconst formDep = document.querySelector('.formDep');\r\nconst formTask = document.querySelector('.formTask');\r\nconst formExistingTask = document.querySelector('.formExistingTask');\r\n\r\nconst DOM = (function() {\r\n    const _focusModal = (modal) => {\r\n        if (modal.querySelector('input')) \r\n             modal.querySelector('input').focus();\r\n    }\r\n\r\n    const _clearAllInputs = (element) => {\r\n        if (element.querySelectorAll('input'))\r\n            element.querySelectorAll('input').forEach(input => {\r\n                input.value = '';\r\n            })\r\n        if (element.querySelectorAll('textarea'))\r\n            element.querySelectorAll('textarea').forEach(area => {\r\n                area.value = '';\r\n            })\r\n    }\r\n\r\n    const openModal = (modal) => {\r\n        modal.style.display = 'flex';\r\n        _focusModal(modal);\r\n\r\n    }\r\n\r\n    const closeModal = (modal) => {\r\n        modal.style.display = 'none';\r\n        _clearAllInputs(modal);\r\n\r\n        if (modal === newTaskModal) \r\n            closeTaskModal();\r\n        \r\n    }\r\n    \r\n    const switchCategory = (category) => {\r\n        categories.forEach(cat => {\r\n            if (cat.classList.value.includes('selectedCategory'))\r\n                cat.classList.remove('selectedCategory');\r\n        })\r\n        category.classList.add('selectedCategory');\r\n    }\r\n\r\n    const showTemporaryWarning = (message) => {\r\n        warning.textContent = message;\r\n        warning.style.display = 'block';\r\n        setTimeout(function() {\r\n            warning.textContent = '';\r\n            warning.style.display = 'none';\r\n        }, 3000);\r\n    }\r\n\r\n    const openMod = function(department, DOMelement, DBelement) {\r\n        const handler = function(e) {\r\n            if (e.target !== DOMelement.querySelector('.done')) {\r\n                openModal(taskModal)\r\n                document.querySelector('.modalTask').classList = `modal modalTask taskModal${DBelement.priority}`;\r\n                document.querySelector('.existingTaskTitle').textContent = DBelement.title;\r\n                document.querySelector('.existingTaskPriority').textContent = DBelement.priority;\r\n                document.querySelector('.existingTaskDescription').innerHTML = `Description: <br> ${DBelement.description}`;\r\n                document.querySelector('.existingTaskNotes').innerHTML = `Notes: <br> ${DBelement.notes}`;\r\n                document.querySelector('.existingTaskDeadline').innerHTML = `DEADLINE: <br> ${DBelement.deadline}`;\r\n                document.querySelector('.editTask').classList = `editTask editTaskPr${DBelement.priority === 'I' ? 1 : (DBelement.priority === 'II' ? 2 : 3)}`;\r\n\r\n                taskClicked = [department, DBelement];\r\n\r\n                openTaskModalToEdit();\r\n        }\r\n            for (let i = 0; i < DOMelement.classList.length; i++)\r\n                if (DOMelement.classList[i] === 'doneTask')\r\n                    DOMelement.removeEventListener('click', handler);\r\n        }\r\n        return handler;\r\n    }\r\n    const openTaskModalOnClick = (department, DOMelement, DBelement) => {\r\n        DOMelement.addEventListener('click', openMod(department, DOMelement, DBelement))\r\n    }\r\n    const activateMarkAsDone = (todo, toDo) => {\r\n        todo.querySelector('.done').addEventListener('click', function() {\r\n          todo.classList.add('doneTask');\r\n          Functionality.markTaskAsDone(toDo);  \r\n        })\r\n    }\r\n    const loadTask = (toDo, dep) => {\r\n        const todo = document.createElement('div');\r\n        todo.classList = `toDo toDo${toDo.priority}`;\r\n        if (toDo.done === true) {\r\n            todo.classList.add('doneTask');\r\n        }\r\n        const title = document.createElement('span');\r\n        title.classList = 'toDoTitle';\r\n        title.textContent = toDo.title;\r\n        const done = document.createElement('img');\r\n        done.classList = 'done icon';\r\n        done.src = Done;\r\n\r\n        todo.append(title, done);\r\n\r\n        openTaskModalOnClick(dep, todo, toDo);\r\n\r\n        activateMarkAsDone(todo, toDo);\r\n\r\n        return todo;\r\n}\r\n    const loadTasks = (dep) => {\r\n        const toDoCont = document.createElement('div');\r\n        toDoCont.classList = 'toDoCont';\r\n        let todo;\r\n        if (currentCategory === 'all') {\r\n            dep.toDos.forEach(toDo => {\r\n                todo = loadTask(toDo);\r\n                toDoCont.append(todo);\r\n            })\r\n        }\r\n        else if (currentCategory === 'done') {\r\n            dep.toDos.forEach(toDo => {\r\n                if (toDo.done === true) {\r\n                    todo = loadTask(toDo);\r\n                    toDoCont.append(todo);\r\n                }\r\n            })\r\n        }\r\n        else if (currentCategory === 'missed') {\r\n            dep.toDos.forEach(toDo => {\r\n                if (toDo.done === false) {\r\n                    const currentTime = new Date();\r\n                    if (Number(toDo.deadline[0] + toDo.deadline[1] + toDo.deadline[2] + toDo.deadline[3]) < currentTime.getFullYear()) {\r\n                        todo = loadTask(toDo);\r\n                        toDoCont.append(todo);\r\n                    }\r\n                    else if (Number(toDo.deadline[0] + toDo.deadline[1] + toDo.deadline[2] + toDo.deadline[3]) === currentTime.getFullYear()) \r\n                        if (Number(toDo.deadline[5] + toDo.deadline[6]) < currentTime.getMonth() + 1) {\r\n                            todo = loadTask(toDo);\r\n                            toDoCont.append(todo);\r\n                        }\r\n                        else if (Number(toDo.deadline[5] + toDo.deadline[6]) === currentTime.getMonth() + 1)\r\n                            if (Number(toDo.deadline[8] + toDo.deadline[9]) < currentTime.getDate()) {\r\n                                todo = loadTask(toDo);\r\n                                toDoCont.append(todo);\r\n                            }\r\n                            else if (Number(toDo.deadline[8] + toDo.deadline[9]) === currentTime.getDate())\r\n                                if (Number(toDo.deadline[14] + toDo.deadline[15]) < currentTime.getHours()) {\r\n                                    todo = loadTask(toDo);\r\n                                    toDoCont.append(todo);\r\n                                }\r\n                                else if (Number(toDo.deadline[14] + toDo.deadline[15]) === currentTime.getHours())\r\n                                    if (Number(toDo.deadline[17] + toDo.deadline[18]) < currentTime.getMinutes()) {\r\n                                        todo = loadTask(toDo);\r\n                                        toDoCont.append(todo);\r\n                                    }\r\n                }   \r\n            })\r\n        }\r\n        else if (currentCategory === 'left') {\r\n            dep.toDos.forEach(toDo => {\r\n                if (toDo.done === false) {\r\n                    todo = loadTask(toDo);\r\n                    toDoCont.append(todo);\r\n                }\r\n            })\r\n        }\r\n       return toDoCont;\r\n    }\r\n\r\n    const updateDepartment = (department) => {\r\n        let toDoCont = loadTasks(department);\r\n        if (toDoCont) {\r\n            const depCont = document.createElement('div');\r\n            depCont.classList = `depContainer${department.title}`;\r\n            const dep = document.createElement('div');\r\n            dep.classList = `department ${department.title}`;\r\n            const plus = document.createElement('img');\r\n            plus.classList = `depPlus ${department.title} icon`;\r\n            const title = document.createElement('span');\r\n            title.textContent = department.title;\r\n            title.classList = `depTitle ${department.title}`;\r\n            const expand = document.createElement('img');\r\n            expand.classList = `depExpand  ${department.title} icon`;\r\n            const del = document.createElement('img');\r\n            del.classList = `depDelete ${department.title} icon`;\r\n\r\n            plus.src = Plus;\r\n            expand.src = DownArrow;\r\n            del.src = Minus;\r\n            dep.append(plus, title, expand, del);\r\n            depCont.append(dep);\r\n            depCont.append(toDoCont);\r\n            tasks.append(depCont);\r\n            setTimeout(activateDepartmentButtons(dep), 0);\r\n        }\r\n }\r\n    const updateDepartments = () => {\r\n        tasks.textContent = '';\r\n        (JSON.parse(window.localStorage.getItem('DEPARTMENTS'))).forEach(department => {\r\n            updateDepartment(department);\r\n    })\r\n}\r\n\r\n    const activatePlus = (department) => {\r\n        department.querySelector('.depPlus').addEventListener('click', function() {\r\n            openModal(newTaskModal);\r\n            openTaskModal();\r\n            const DEPARTMENTS = JSON.parse(window.localStorage.getItem('DEPARTMENTS'));\r\n            DEPARTMENTS.forEach(dep => {\r\n                if (dep.title === department.querySelector('.depTitle').textContent) {\r\n                    plusClicked = dep;\r\n                }\r\n            })\r\n        })\r\n    }\r\n    const activateClick = (department) => {\r\n        department.addEventListener('click', (e) => {\r\n            if (e.target !== department.querySelector('.depPlus') && e.target !== department.querySelector('.depDelete'))\r\n                DOM.toggleShowTasks(department.parentNode);\r\n        })\r\n    }\r\n    const activateDelete = (department) => {\r\n        department.querySelector('.depDelete').addEventListener('click', function() {\r\n        Functionality.deleteDepartment(department);\r\n        updateDepartments();\r\n    })\r\n    }\r\n    const activateDepartmentButtons = (department) => {\r\n        activatePlus(department);\r\n        activateClick(department);\r\n        activateDelete(department);\r\n    }\r\n\r\n    const openPrioritySelect = () => {\r\n        let select = document.querySelector('.select_ul');\r\n        select.style.display = 'block';\r\n    }\r\n    const closePrioritySelect = () => {\r\n        let select = document.querySelector('.select_ul');\r\n        select.style.display = 'none';\r\n    }\r\n    const togglePrioritySelect = () => {\r\n        let select = document.querySelector('.select_ul');\r\n        if (select.style.display === 'none')\r\n            openPrioritySelect();\r\n        else\r\n            closePrioritySelect();\r\n    }\r\n    const changePriority = (priority) => {\r\n        priority.textContent = priority.classList[1];\r\n        let def = document.querySelector('.default_option');\r\n        def.innerHTML = '';\r\n        def.append(priority);\r\n        closePrioritySelect();\r\n    }\r\n\r\n    const submitEditOnEnter = (e) => {\r\n        if (e.key === \"Enter\")\r\n            document.querySelector('.editTaskBtn').click();\r\n    }\r\n    const submitTaskOnEnter = (e) => {\r\n        if (e.key === \"Enter\")\r\n            document.querySelector('.addTask').click();\r\n    }\r\n    const openTaskModalToEdit = () => {\r\n        document.querySelector('.addTask').style.display = 'none';\r\n        document.querySelector('.addTask').disabled = true;\r\n        document.querySelector('.select_ul').style.display = 'none';\r\n        const edit = document.createElement('button');\r\n        edit.type = 'submit';\r\n        edit.textContent = 'OK';\r\n        edit.classList = 'editTaskBtn';\r\n\r\n        document.addEventListener('keydown', submitEditOnEnter);\r\n        document.removeEventListener('keydown', submitTaskOnEnter);\r\n\r\n        if (!newTaskModal.querySelector('form').querySelector('.editTaskBtn'))\r\n            newTaskModal.querySelector('form').append(edit);\r\n\r\n        edit.addEventListener('click', function() {\r\n            const [title, priority, description, notes, date] = Functionality.extractTaskData();\r\n            processInfoEditTask(taskClicked[1], title, priority, description, notes, date);\r\n        });\r\n    }\r\n    const closeTaskModal = () => {\r\n        if (document.querySelector('.editTaskBtn'))\r\n            document.querySelector('.editTaskBtn').remove();\r\n    }\r\n    const openTaskModal = () => {\r\n        document.querySelector('.addTask').style.display = 'block';\r\n        document.querySelector('.addTask').disabled = false;\r\n        document.addEventListener('keydown', submitTaskOnEnter);\r\n\r\n        if (document.querySelector('.editTaskBtn')) {\r\n            document.querySelector('.editTaskBtn').style.display = 'none';\r\n            document.querySelector('.editTaskBtn').disabled = true;\r\n            document.removeEventListener('keydown', submitEditOnEnter);\r\n        }\r\n    }\r\n\r\n    const toggleShowTasks = (department) => {\r\n        if (department.querySelector('.toDoCont').innerHTML) {\r\n            const toDoContainer = department.querySelector('.toDoCont');\r\n            if (toDoContainer.style.display === 'none') {\r\n                toDoContainer.style.display = 'flex';\r\n                department.querySelector('.depExpand').src = DownArrow;   \r\n            }\r\n            else {\r\n                toDoContainer.style.display = 'none';\r\n                department.querySelector('.depExpand').src = UpArrow;   \r\n            }\r\n        }\r\n    }\r\n    return {openModal, openTaskModalToEdit, closeModal, changePriority, closePrioritySelect, updateDepartments, showTemporaryWarning, switchCategory, togglePrioritySelect, toggleShowTasks};\r\n})();\r\n\r\nconst Functionality = (function() {\r\n    const addDepartment = (title) => {\r\n        let stop = false;\r\n        let dep;\r\n        (JSON.parse(window.localStorage.getItem('DEPARTMENTS'))).forEach(department => {\r\n            if (department.title.toLowerCase() === title.toLowerCase()) {\r\n                DOM.showTemporaryWarning('There is already a department with this title.');\r\n                stop = true;\r\n            }\r\n        })\r\n        if (stop === true)\r\n            return 0;\r\n        dep = new Department(title);\r\n        let departments = JSON.parse(window.localStorage.getItem('DEPARTMENTS'));\r\n        departments.push(dep);\r\n        window.localStorage.setItem('DEPARTMENTS', JSON.stringify(departments));\r\n    }\r\n    const extractTaskData = () => {\r\n        const title = formTask.querySelector('#taskTitle').value;\r\n        const priority = formTask.querySelector('.default_option').querySelector('.priority').textContent;\r\n        const description = formTask.querySelector('#desc').value;\r\n        const notes = formTask.querySelector('#notes').value;\r\n        const dateValue = formTask.querySelector('#date').value;\r\n        let date = new Date(dateValue);\r\n        date = `${date.getFullYear()}.${date.getMonth() + 1 < 10 ? `0${date.getMonth() +1}` : date.getMonth() + 1}.${date.getDate() < 10 ? `0${date.getDate()}` : date.getDate()} at ${date.getHours() < 10 ? `0${date.getHours()}` : date.getHours()}:${date.getMinutes()<10 ? `0${date.getMinutes()}` : date.getMinutes()}`;\r\n\r\n        return [title, priority, description, notes, date];\r\n    }\r\n\r\n    const addTask = (department, title, priority, description, notes, date) => {\r\n        let stop = false;\r\n        department.toDos.forEach(toDo => {\r\n            if (toDo.title.toLowerCase() === title.toLowerCase()) {\r\n                DOM.showTemporaryWarning('There already is such a task in this department!')\r\n                stop = true;\r\n            }\r\n        })\r\n        if (stop === true)\r\n            return 0;\r\n        let task = new ToDo(title, priority, description, notes, date);\r\n        const DEPARTMENTS = (JSON.parse(window.localStorage.getItem('DEPARTMENTS')));\r\n        let i;\r\n        for (i = 0; i < DEPARTMENTS.length; i++) {\r\n            if (DEPARTMENTS[i].title === department.title) \r\n                    DEPARTMENTS[i].toDos.push(task);\r\n        }\r\n        setTimeout(function() {\r\n            window.localStorage.setItem('DEPARTMENTS', JSON.stringify(DEPARTMENTS));\r\n        }, 0)\r\n    }\r\n    const editTask = (task, title, priority, description, notes, date) => {\r\n        let DEPARTMENTS = JSON.parse(window.localStorage.getItem('DEPARTMENTS'));\r\n        let i, j;\r\n        for (i = 0; i < DEPARTMENTS.length; i++)\r\n            for (j = 0; j < DEPARTMENTS[i].toDos.length; j++)\r\n                if (DEPARTMENTS[i].toDos[j].title === task.title) {\r\n                    DEPARTMENTS[i].toDos[j].title = title;\r\n                    DEPARTMENTS[i].toDos[j].priority = priority;\r\n                    DEPARTMENTS[i].toDos[j].description = description;\r\n                    DEPARTMENTS[i].toDos[j].notes = notes;\r\n                    DEPARTMENTS[i].toDos[j].deadline = date;\r\n                }\r\n        setTimeout(function() {\r\n            window.localStorage.setItem('DEPARTMENTS', JSON.stringify(DEPARTMENTS));\r\n        }, 0)\r\n    }\r\n    \r\n    const deleteDepartment = (departmentDOM) => {\r\n        let DEPARTMENTS = JSON.parse(window.localStorage.getItem('DEPARTMENTS'));\r\n        for (let i = 0; i < DEPARTMENTS.length; i++) {\r\n            if (DEPARTMENTS[i].title === departmentDOM.querySelector('.depTitle').textContent)\r\n                DEPARTMENTS.splice(i, 1);\r\n        }\r\n        setTimeout(function() {\r\n            window.localStorage.setItem('DEPARTMENTS', JSON.stringify(DEPARTMENTS));\r\n        }, 0)\r\n    }\r\n    \r\n    const markTaskAsDone = (task) => {\r\n        const DEPARTMENTS = JSON.parse(window.localStorage.getItem('DEPARTMENTS'));\r\n        let i, j;\r\n        for (i = 0; i < DEPARTMENTS.length; i++)\r\n            for (j = 0; j < DEPARTMENTS[i].toDos.length; j++) {\r\n                if (DEPARTMENTS[i].toDos[j].title === task.title)\r\n                    DEPARTMENTS[i].toDos[j].done = true;\r\n            }\r\n        setTimeout(function() {\r\n            window.localStorage.setItem('DEPARTMENTS', JSON.stringify(DEPARTMENTS));\r\n        })\r\n    }\r\n    return {addDepartment, addTask, deleteDepartment, editTask, extractTaskData, markTaskAsDone};\r\n})();\r\n\r\nfunction processInfoEditTask(task, title, priority, description, notes, date) {\r\n    Functionality.editTask(task, title, priority, description, notes, date);\r\n    setTimeout(function() {DOM.updateDepartments()}, 0);\r\n    setTimeout(DOM.closeModal(newTaskModal));\r\n}\r\n\r\naddDep.addEventListener('click', function() {\r\n    DOM.openModal(newDepModal);\r\n});\r\ncolorMap.addEventListener('click', function() {\r\n    DOM.openModal(colorMapModal);\r\n});\r\n\r\nwindow.onclick = function(e) {\r\n    modals.forEach(modal => {\r\n        if (modal === e.target) \r\n            DOM.closeModal(modal);\r\n    })\r\n}\r\n\r\nformDep.addEventListener('submit', function(e) {\r\n    const value = document.querySelector('#title2').value;\r\n    Functionality.addDepartment(value);\r\n    setTimeout(function() {\r\n        DOM.updateDepartments();\r\n        DOM.closeModal(newDepModal);\r\n    }, 0)\r\n    e.preventDefault();\r\n})\r\n\r\nformTask.addEventListener('submit', function(e) {\r\n    e.preventDefault();\r\n    const [title, priority, description, notes, date] = Functionality.extractTaskData();\r\n    Functionality.addTask(plusClicked, title, priority, description, notes, date);\r\n    setTimeout(function() {\r\n        DOM.updateDepartments();\r\n        DOM.closeModal(newTaskModal);\r\n    }, 0)\r\n})\r\n\r\nformExistingTask.addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n    DOM.closeModal(taskModal);\r\n    DOM.openModal(newTaskModal);\r\n    let department = taskClicked[0];\r\n    let toDo = taskClicked[1];\r\n    newTaskModal.querySelector('#taskTitle').value = toDo.title;\r\n    newTaskModal.querySelector('#desc').value = toDo.description;\r\n    newTaskModal.querySelector('#notes').value = toDo.notes;\r\n    newTaskModal.querySelector('.default_option').querySelector('.priority').textContent = toDo.priority;\r\n    let date = toDo.deadline.replaceAll('.', '-');\r\n    date = date.replace(' at ', 'T');\r\n    newTaskModal.querySelector('#date').value = date;\r\n})\r\n\r\ncategories.forEach(category => {\r\n    category.addEventListener('click', function() {\r\n        DOM.switchCategory(category);\r\n        currentCategory = category.classList[0];\r\n        DOM.updateDepartments();\r\n    })\r\n})\r\n\r\ndocument.querySelector('.default_option').addEventListener('click', function() {\r\n    DOM.togglePrioritySelect();\r\n})\r\n\r\ndocument.querySelector('.select_ul').querySelectorAll('.priority').forEach(priority => {\r\n    priority.addEventListener('click', function() {\r\n        DOM.changePriority(priority.cloneNode());\r\n    });\r\n})\r\nwindow.onload = function() {\r\n    DOM.updateDepartments();\r\n\r\n}\r\n\r\n"],"names":[],"sourceRoot":""}